Abstract:
This project is a game called “Pong” that is one of the most pioneering games to ever exist. Outlined below is a collection of combinational and sequential design logic
implementations of the game that can be played using joysticks and a monitor. This project is comprised of 8 verilog modules that are dependent on each other and run onto Intel DE10
Lite FPGA along with Arduino Mega. The detailed implementation is outlined and attached.

Introduction
FPGA, field programmable gate array, is a collection of hardware circuits that are
utilised to perform yet carry out logic operations, with the help of software. Furthermore,
digital logic circuits can be either combinational or sequential to perform certain operations
and functions necessary to carry out operations, perform calculations, display output, and
store information in registers for current or future use. In this project, Masarani and Sheikhi
designed, tested, and implemented a very well known, pioneer game known as Pong. This
game was initially designed to be played via a software GUI. However, we decided to
implement it using a variety of combinational and sequential logic with the help of FPGA:
Intel DE-10 lite and Verilog. Furthermore, this project was written in Verilog using Quartus
Prime Lite.

The game can be played in single player or multiplayer. In order to play in single player, the switch is turned on (state: 1) and the paddle can be moved vertically to hit the ball using joysticks or buttons. In order to play in multiplayer, specifically two-players, the
switch is turned off (state: 0) and two extra buttons are required to
move the second paddle vertically. In order to show and maintain the
state of the game and the score of the player 1 and player 2, we
utilised the seven segment display embedded in the board to show the
score of each player, respectively. Once a player has reached a score
of 9, the game ends, and the winner’s team colour is displayed on the screen. 
